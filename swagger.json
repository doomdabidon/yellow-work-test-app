{
  "swagger": "2.0",
  "info": {
    "description": "This is a test server.",
    "version": "0.1.0",
    "title": "Swagger test",
    "contact": {
      "email": "mikhail.shautsou@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "yellow-work-test-app.herokuapp.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "auth",
      "description": "Auth actions"
    },
    {
      "name": "runs",
      "description": "Runs actions"
    },
    {
      "name": "photos",
      "description": "Photos actions"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login to existed account",
        "description": "",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "400": {
            "description": "Invalid data"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register an account",
        "description": "",
        "operationId": "register",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Auth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "400": {
            "description": "Invalid data"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/runs": {
      "post": {
        "tags": [
          "runs"
        ],
        "summary": "Save new run",
        "operationId": "saveRun",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Run"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "run": {
                  "$ref": "#/definitions/RunResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "runs"
        ],
        "summary": "Returns users runs",
        "operationId": "getRuns",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "runs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RunResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/runs/{id}": {
      "put": {
        "tags": [
          "runs"
        ],
        "summary": "Update run",
        "operationId": "updateRun",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of run",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Run"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid data"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "runs"
        ],
        "summary": "Delete run",
        "operationId": "deleteRun",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of run",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid data"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "runs"
        ],
        "summary": "Get run",
        "operationId": "getRun",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of run",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "run": {
                  "$ref": "#/definitions/RunResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/runs/report": {
      "get": {
        "tags": [
          "runs"
        ],
        "summary": "Returns users runs report",
        "operationId": "getReport",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RunReportResponse"
              }
            }
          },
          "400": {
            "description": "Invalid data"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/photos": {
      "post": {
        "tags": [
          "photos"
        ],
        "summary": "Save images",
        "operationId": "saveImgaes",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "documents",
            "required": true,
            "type": "string",
            "format": "binary"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "photos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ImageResponce"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          }
        }
      },
      "get": {
        "tags": [
          "photos"
        ],
        "summary": "Returns images list",
        "operationId": "getImages",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "photos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ImageResponce"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "ImageResponce": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "row": {
          "type": "string"
        }
      }
    },
    "Auth": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "testemail@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "testemail@gmail.com"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          }
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Run": {
      "type": "object",
      "properties": {
        "distance": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "time": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RunResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "distance": {
          "type": "integer",
          "format": "int32"
        },
        "time": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RunReportResponse": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "averageSpeed": {
          "type": "integer",
          "format": "int32"
        },
        "averageTime": {
          "type": "integer",
          "format": "int32"
        },
        "totalDistants": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}